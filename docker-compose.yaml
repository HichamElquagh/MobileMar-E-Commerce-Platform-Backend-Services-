services:
  products:
    labels:
      - com.example.description=Products Service
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: npm run start:dev products
    restart: always
    env_file:
      - ./apps/products/.env
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
    networks:
      - app-network

  auth:
    labels:
      - com.example.description=Auth Service
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    restart: always
    env_file:
      - ./apps/auth/.env
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo
    networks:
      - app-network

  payments:
    labels:
      - com.example.description=Payments Service
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: npm run start:dev payments
    restart: always
    env_file:
      - ./apps/payments/.env
    ports:
      - 3002:3002
    volumes:
      - .:/usr/src/app
    depends_on:
      - postgres
    networks:
      - app-network

  orders:
    labels:
      - com.example.description=Orders Service
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    restart: always
    env_file:
      - ./apps/orders/.env
    ports:
      - 3003:3003
    volumes:
      - .:/usr/src/app
    networks:
      - app-network

  cart:
    labels:
      - com.example.description=Cart Service
    build:
      context: .
      dockerfile: ./apps/cart/Dockerfile
      target: development
    command: npm run start:dev cart
    restart: always
    env_file:
      - ./apps/cart/.env
    ports:
      - 3004:3004
    volumes:
      - .:/usr/src/app
    networks:
      - app-network

  mongo:
    labels:
      - com.example.description=MongoDB Database
    image: mongo
    container_name: local_mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - local_mongodata:/data/db
    networks:
      - app-network

  postgres:
    labels:
      - com.example.description=PostgreSQL Database
    image: postgres
    container_name: local_pgdb
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: productServiceDB
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  local_mongodata:
  local_pgdata:

networks:
  app-network:
    driver: bridge
